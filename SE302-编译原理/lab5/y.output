State 97 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 lvalue: ID
    3       | ID LBRACK exp RBRACK
    4       | lvalue LBRACK exp RBRACK
    5       | lvalue DOT ID

    6 exp: lvalue
    7    | exp AND exp
    8    | exp OR exp
    9    | NIL
   10    | INT
   11    | STRING
   12    | exp PLUS exp
   13    | exp MINUS exp
   14    | exp TIMES exp
   15    | exp DIVIDE exp
   16    | exp EQ exp
   17    | exp NEQ exp
   18    | exp LT exp
   19    | exp GT exp
   20    | exp LE exp
   21    | exp GE exp
   22    | MINUS exp
   23    | ID LBRACE recorditems RBRACE
   24    | ID LBRACE RBRACE
   25    | lvalue ASSIGN exp
   26    | IF exp THEN exp
   27    | IF exp THEN exp ELSE exp
   28    | WHILE exp DO exp
   29    | FOR ID ASSIGN exp TO exp DO exp
   30    | BREAK
   31    | LET decs IN exp END
   32    | LET decs IN exps END
   33    | ID LBRACK exp RBRACK OF exp
   34    | seqexp
   35    | voidexp
   36    | ID LPAREN args RPAREN

   37 exps: exp
   38     | exp SEMICOLON exps

   39 seqexp: LPAREN exps RPAREN

   40 recorditem: ID EQ exp

   41 recorditems: recorditem
   42            | recorditem COMMA recorditems

   43 voidexp: LPAREN RPAREN

   44 args: exp
   45     | exp COMMA args
   46     | %empty

   47 tyfield: ID COLON ID

   48 tyfields_nonempty: tyfield
   49                  | tyfield COMMA tyfields_nonempty

   50 tyfields: tyfields_nonempty
   51         | %empty

   52 ty: ID
   53   | LBRACE tyfields RBRACE
   54   | ARRAY OF ID

   55 tydec: TYPE ID EQ ty

   56 tydecs: tydec
   57       | tydec tydecs

   58 vardec: VAR ID ASSIGN exp
   59       | VAR ID COLON ID ASSIGN exp

   60 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   61       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp
   62       | FUNCTION ID LPAREN RPAREN EQ exp
   63       | FUNCTION ID LPAREN RPAREN COLON ID EQ exp

   64 fundecs: fundec
   65        | fundec fundecs

   66 dec: vardec
   67    | tydecs
   68    | fundecs

   69 decs: dec
   70     | dec decs


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 2 3 5 23 24 29 33 36 40 47 52 54 55 58 59 60 61 62 63
STRING (259) 11
INT (260) 10
COMMA (261) 42 45 49
COLON (262) 47 59 61 63
SEMICOLON (263) 38
LPAREN (264) 36 39 43 60 61 62 63
RPAREN (265) 36 39 43 60 61 62 63
LBRACK (266) 3 4 33
RBRACK (267) 3 4 33
LBRACE (268) 23 24 53
RBRACE (269) 23 24 53
DOT (270) 5
PLUS (271) 12
MINUS (272) 13 22
TIMES (273) 14
DIVIDE (274) 15
EQ (275) 16 40 55 60 61 62 63
NEQ (276) 17
LT (277) 18
LE (278) 20
GT (279) 19
GE (280) 21
AND (281) 7
OR (282) 8
ASSIGN (283) 25 29 58 59
ARRAY (284) 54
IF (285) 26 27
THEN (286) 26 27
ELSE (287) 27
WHILE (288) 28
FOR (289) 29
TO (290) 29
DO (291) 28 29
LET (292) 31 32
IN (293) 31 32
END (294) 31 32
OF (295) 33 54
BREAK (296) 30
NIL (297) 9
FUNCTION (298) 60 61 62 63
VAR (299) 58 59
TYPE (300) 55
LOW (301)
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
lvalue (50)
    on left: 2 3 4 5, on right: 4 5 6 25
exp (51)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36, on right: 1 3 4 7 8 12 13 14
    15 16 17 18 19 20 21 22 25 26 27 28 29 31 33 37 38 40 44 45 58
    59 60 61 62 63
exps (52)
    on left: 37 38, on right: 32 38 39
seqexp (53)
    on left: 39, on right: 34
recorditem (54)
    on left: 40, on right: 41 42
recorditems (55)
    on left: 41 42, on right: 23 42
voidexp (56)
    on left: 43, on right: 35
args (57)
    on left: 44 45 46, on right: 36 45
tyfield (58)
    on left: 47, on right: 48 49
tyfields_nonempty (59)
    on left: 48 49, on right: 49 50
tyfields (60)
    on left: 50 51, on right: 53 60 61
ty (61)
    on left: 52 53 54, on right: 55
tydec (62)
    on left: 55, on right: 56 57
tydecs (63)
    on left: 56 57, on right: 57 67
vardec (64)
    on left: 58 59, on right: 66
fundec (65)
    on left: 60 61 62 63, on right: 64 65
fundecs (66)
    on left: 64 65, on right: 65 68
dec (67)
    on left: 66 67 68, on right: 69 70
decs (68)
    on left: 69 70, on right: 31 32 70


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    lvalue   go to state 13
    exp      go to state 14
    seqexp   go to state 15
    voidexp  go to state 16


State 1

    2 lvalue: ID .
    3       | ID . LBRACK exp RBRACK
   23 exp: ID . LBRACE recorditems RBRACE
   24    | ID . LBRACE RBRACE
   33    | ID . LBRACK exp RBRACK OF exp
   36    | ID . LPAREN args RPAREN

    LPAREN  shift, and go to state 17
    LBRACK  shift, and go to state 18
    LBRACE  shift, and go to state 19

    $default  reduce using rule 2 (lvalue)


State 2

   11 exp: STRING .

    $default  reduce using rule 11 (exp)


State 3

   10 exp: INT .

    $default  reduce using rule 10 (exp)


State 4

   39 seqexp: LPAREN . exps RPAREN
   43 voidexp: LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 20
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 21
    exps     go to state 22
    seqexp   go to state 15
    voidexp  go to state 16


State 5

   22 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 23
    seqexp   go to state 15
    voidexp  go to state 16


State 6

   26 exp: IF . exp THEN exp
   27    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 24
    seqexp   go to state 15
    voidexp  go to state 16


State 7

   28 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 25
    seqexp   go to state 15
    voidexp  go to state 16


State 8

   29 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 26


State 9

   31 exp: LET . decs IN exp END
   32    | LET . decs IN exps END

    FUNCTION  shift, and go to state 27
    VAR       shift, and go to state 28
    TYPE      shift, and go to state 29

    tydec    go to state 30
    tydecs   go to state 31
    vardec   go to state 32
    fundec   go to state 33
    fundecs  go to state 34
    dec      go to state 35
    decs     go to state 36


State 10

   30 exp: BREAK .

    $default  reduce using rule 30 (exp)


State 11

    9 exp: NIL .

    $default  reduce using rule 9 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 37


State 13

    4 lvalue: lvalue . LBRACK exp RBRACK
    5       | lvalue . DOT ID
    6 exp: lvalue .
   25    | lvalue . ASSIGN exp

    LBRACK  shift, and go to state 38
    DOT     shift, and go to state 39
    ASSIGN  shift, and go to state 40

    $default  reduce using rule 6 (exp)


State 14

    1 program: exp .
    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 1 (program)


State 15

   34 exp: seqexp .

    $default  reduce using rule 34 (exp)


State 16

   35 exp: voidexp .

    $default  reduce using rule 35 (exp)


State 17

   36 exp: ID LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 46 (args)

    lvalue   go to state 13
    exp      go to state 53
    seqexp   go to state 15
    voidexp  go to state 16
    args     go to state 54


State 18

    3 lvalue: ID LBRACK . exp RBRACK
   33 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 55
    seqexp   go to state 15
    voidexp  go to state 16


State 19

   23 exp: ID LBRACE . recorditems RBRACE
   24    | ID LBRACE . RBRACE

    ID      shift, and go to state 56
    RBRACE  shift, and go to state 57

    recorditem   go to state 58
    recorditems  go to state 59


State 20

   43 voidexp: LPAREN RPAREN .

    $default  reduce using rule 43 (voidexp)


State 21

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   37 exps: exp .
   38     | exp . SEMICOLON exps

    SEMICOLON  shift, and go to state 60
    PLUS       shift, and go to state 41
    MINUS      shift, and go to state 42
    TIMES      shift, and go to state 43
    DIVIDE     shift, and go to state 44
    EQ         shift, and go to state 45
    NEQ        shift, and go to state 46
    LT         shift, and go to state 47
    LE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    AND        shift, and go to state 51
    OR         shift, and go to state 52

    $default  reduce using rule 37 (exps)


State 22

   39 seqexp: LPAREN exps . RPAREN

    RPAREN  shift, and go to state 61


State 23

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   22    | MINUS exp .

    $default  reduce using rule 22 (exp)


State 24

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   26    | IF exp . THEN exp
   27    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    THEN    shift, and go to state 62


State 25

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   28    | WHILE exp . DO exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    DO      shift, and go to state 63


State 26

   29 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 64


State 27

   60 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   61       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp
   62       | FUNCTION . ID LPAREN RPAREN EQ exp
   63       | FUNCTION . ID LPAREN RPAREN COLON ID EQ exp

    ID  shift, and go to state 65


State 28

   58 vardec: VAR . ID ASSIGN exp
   59       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 66


State 29

   55 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 67


State 30

   56 tydecs: tydec .
   57       | tydec . tydecs

    TYPE  shift, and go to state 29

    $default  reduce using rule 56 (tydecs)

    tydec   go to state 30
    tydecs  go to state 68


State 31

   67 dec: tydecs .

    $default  reduce using rule 67 (dec)


State 32

   66 dec: vardec .

    $default  reduce using rule 66 (dec)


State 33

   64 fundecs: fundec .
   65        | fundec . fundecs

    FUNCTION  shift, and go to state 27

    $default  reduce using rule 64 (fundecs)

    fundec   go to state 33
    fundecs  go to state 69


State 34

   68 dec: fundecs .

    $default  reduce using rule 68 (dec)


State 35

   69 decs: dec .
   70     | dec . decs

    FUNCTION  shift, and go to state 27
    VAR       shift, and go to state 28
    TYPE      shift, and go to state 29

    $default  reduce using rule 69 (decs)

    tydec    go to state 30
    tydecs   go to state 31
    vardec   go to state 32
    fundec   go to state 33
    fundecs  go to state 34
    dec      go to state 35
    decs     go to state 70


State 36

   31 exp: LET decs . IN exp END
   32    | LET decs . IN exps END

    IN  shift, and go to state 71


State 37

    0 $accept: program $end .

    $default  accept


State 38

    4 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 72
    seqexp   go to state 15
    voidexp  go to state 16


State 39

    5 lvalue: lvalue DOT . ID

    ID  shift, and go to state 73


State 40

   25 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 74
    seqexp   go to state 15
    voidexp  go to state 16


State 41

   12 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 75
    seqexp   go to state 15
    voidexp  go to state 16


State 42

   13 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 76
    seqexp   go to state 15
    voidexp  go to state 16


State 43

   14 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 77
    seqexp   go to state 15
    voidexp  go to state 16


State 44

   15 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 78
    seqexp   go to state 15
    voidexp  go to state 16


State 45

   16 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 79
    seqexp   go to state 15
    voidexp  go to state 16


State 46

   17 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 80
    seqexp   go to state 15
    voidexp  go to state 16


State 47

   18 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 81
    seqexp   go to state 15
    voidexp  go to state 16


State 48

   20 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 82
    seqexp   go to state 15
    voidexp  go to state 16


State 49

   19 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 83
    seqexp   go to state 15
    voidexp  go to state 16


State 50

   21 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 84
    seqexp   go to state 15
    voidexp  go to state 16


State 51

    7 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 85
    seqexp   go to state 15
    voidexp  go to state 16


State 52

    8 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 86
    seqexp   go to state 15
    voidexp  go to state 16


State 53

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   44 args: exp .
   45     | exp . COMMA args

    COMMA   shift, and go to state 87
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 44 (args)


State 54

   36 exp: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 88


State 55

    3 lvalue: ID LBRACK exp . RBRACK
    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   33    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 89
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52


State 56

   40 recorditem: ID . EQ exp

    EQ  shift, and go to state 90


State 57

   24 exp: ID LBRACE RBRACE .

    $default  reduce using rule 24 (exp)


State 58

   41 recorditems: recorditem .
   42            | recorditem . COMMA recorditems

    COMMA  shift, and go to state 91

    $default  reduce using rule 41 (recorditems)


State 59

   23 exp: ID LBRACE recorditems . RBRACE

    RBRACE  shift, and go to state 92


State 60

   38 exps: exp SEMICOLON . exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 21
    exps     go to state 93
    seqexp   go to state 15
    voidexp  go to state 16


State 61

   39 seqexp: LPAREN exps RPAREN .

    $default  reduce using rule 39 (seqexp)


State 62

   26 exp: IF exp THEN . exp
   27    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 94
    seqexp   go to state 15
    voidexp  go to state 16


State 63

   28 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 95
    seqexp   go to state 15
    voidexp  go to state 16


State 64

   29 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 96
    seqexp   go to state 15
    voidexp  go to state 16


State 65

   60 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   61       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp
   62       | FUNCTION ID . LPAREN RPAREN EQ exp
   63       | FUNCTION ID . LPAREN RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 97


State 66

   58 vardec: VAR ID . ASSIGN exp
   59       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 98
    ASSIGN  shift, and go to state 99


State 67

   55 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 100


State 68

   57 tydecs: tydec tydecs .

    $default  reduce using rule 57 (tydecs)


State 69

   65 fundecs: fundec fundecs .

    $default  reduce using rule 65 (fundecs)


State 70

   70 decs: dec decs .

    $default  reduce using rule 70 (decs)


State 71

   31 exp: LET decs IN . exp END
   32    | LET decs IN . exps END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 101
    exps     go to state 102
    seqexp   go to state 15
    voidexp  go to state 16


State 72

    4 lvalue: lvalue LBRACK exp . RBRACK
    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    RBRACK  shift, and go to state 103
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52


State 73

    5 lvalue: lvalue DOT ID .

    $default  reduce using rule 5 (lvalue)


State 74

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   25    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 25 (exp)


State 75

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   12    | exp PLUS exp .
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    $default  reduce using rule 12 (exp)


State 76

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   13    | exp MINUS exp .
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    $default  reduce using rule 13 (exp)


State 77

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   14    | exp TIMES exp .
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    $default  reduce using rule 14 (exp)


State 78

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   15    | exp DIVIDE exp .
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    $default  reduce using rule 15 (exp)


State 79

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   16    | exp EQ exp .
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 80

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   17    | exp NEQ exp .
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 81

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   18    | exp LT exp .
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 82

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   20    | exp LE exp .
   21    | exp . GE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 83

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   19    | exp GT exp .
   20    | exp . LE exp
   21    | exp . GE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 84

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   21    | exp GE exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


State 85

    7 exp: exp . AND exp
    7    | exp AND exp .
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 7 (exp)


State 86

    7 exp: exp . AND exp
    8    | exp . OR exp
    8    | exp OR exp .
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51

    $default  reduce using rule 8 (exp)


State 87

   45 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 46 (args)

    lvalue   go to state 13
    exp      go to state 53
    seqexp   go to state 15
    voidexp  go to state 16
    args     go to state 104


State 88

   36 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 36 (exp)


State 89

    3 lvalue: ID LBRACK exp RBRACK .
   33 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 105

    $default  reduce using rule 3 (lvalue)


State 90

   40 recorditem: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 106
    seqexp   go to state 15
    voidexp  go to state 16


State 91

   42 recorditems: recorditem COMMA . recorditems

    ID  shift, and go to state 56

    recorditem   go to state 58
    recorditems  go to state 107


State 92

   23 exp: ID LBRACE recorditems RBRACE .

    $default  reduce using rule 23 (exp)


State 93

   38 exps: exp SEMICOLON exps .

    $default  reduce using rule 38 (exps)


State 94

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   26    | IF exp THEN exp .
   27    | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    ELSE    shift, and go to state 108

    $default  reduce using rule 26 (exp)


State 95

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   28    | WHILE exp DO exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 28 (exp)


State 96

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   29    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    TO      shift, and go to state 109


State 97

   60 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   61       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp
   62       | FUNCTION ID LPAREN . RPAREN EQ exp
   63       | FUNCTION ID LPAREN . RPAREN COLON ID EQ exp

    ID      shift, and go to state 110
    RPAREN  shift, and go to state 111

    RPAREN  [reduce using rule 51 (tyfields)]

    tyfield            go to state 112
    tyfields_nonempty  go to state 113
    tyfields           go to state 114


State 98

   59 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 115


State 99

   58 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 116
    seqexp   go to state 15
    voidexp  go to state 16


State 100

   55 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 117
    LBRACE  shift, and go to state 118
    ARRAY   shift, and go to state 119

    ty  go to state 120


State 101

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   31    | LET decs IN exp . END
   37 exps: exp .
   38     | exp . SEMICOLON exps

    SEMICOLON  shift, and go to state 60
    PLUS       shift, and go to state 41
    MINUS      shift, and go to state 42
    TIMES      shift, and go to state 43
    DIVIDE     shift, and go to state 44
    EQ         shift, and go to state 45
    NEQ        shift, and go to state 46
    LT         shift, and go to state 47
    LE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    AND        shift, and go to state 51
    OR         shift, and go to state 52
    END        shift, and go to state 121

    END  [reduce using rule 37 (exps)]


State 102

   32 exp: LET decs IN exps . END

    END  shift, and go to state 122


State 103

    4 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 4 (lvalue)


State 104

   45 args: exp COMMA args .

    $default  reduce using rule 45 (args)


State 105

   33 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 123
    seqexp   go to state 15
    voidexp  go to state 16


State 106

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   40 recorditem: ID EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 40 (recorditem)


State 107

   42 recorditems: recorditem COMMA recorditems .

    $default  reduce using rule 42 (recorditems)


State 108

   27 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 124
    seqexp   go to state 15
    voidexp  go to state 16


State 109

   29 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 125
    seqexp   go to state 15
    voidexp  go to state 16


State 110

   47 tyfield: ID . COLON ID

    COLON  shift, and go to state 126


State 111

   62 fundec: FUNCTION ID LPAREN RPAREN . EQ exp
   63       | FUNCTION ID LPAREN RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 127
    EQ     shift, and go to state 128


State 112

   48 tyfields_nonempty: tyfield .
   49                  | tyfield . COMMA tyfields_nonempty

    COMMA  shift, and go to state 129

    $default  reduce using rule 48 (tyfields_nonempty)


State 113

   50 tyfields: tyfields_nonempty .

    $default  reduce using rule 50 (tyfields)


State 114

   60 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   61       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 130


State 115

   59 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 131


State 116

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   58 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 58 (vardec)


State 117

   52 ty: ID .

    $default  reduce using rule 52 (ty)


State 118

   53 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 110

    $default  reduce using rule 51 (tyfields)

    tyfield            go to state 112
    tyfields_nonempty  go to state 113
    tyfields           go to state 132


State 119

   54 ty: ARRAY . OF ID

    OF  shift, and go to state 133


State 120

   55 tydec: TYPE ID EQ ty .

    $default  reduce using rule 55 (tydec)


State 121

   31 exp: LET decs IN exp END .

    $default  reduce using rule 31 (exp)


State 122

   32 exp: LET decs IN exps END .

    $default  reduce using rule 32 (exp)


State 123

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   33    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 33 (exp)


State 124

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   27    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 27 (exp)


State 125

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   29    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    DO      shift, and go to state 134


State 126

   47 tyfield: ID COLON . ID

    ID  shift, and go to state 135


State 127

   63 fundec: FUNCTION ID LPAREN RPAREN COLON . ID EQ exp

    ID  shift, and go to state 136


State 128

   62 fundec: FUNCTION ID LPAREN RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 137
    seqexp   go to state 15
    voidexp  go to state 16


State 129

   49 tyfields_nonempty: tyfield COMMA . tyfields_nonempty

    ID  shift, and go to state 110

    tyfield            go to state 112
    tyfields_nonempty  go to state 138


State 130

   60 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   61       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 139
    EQ     shift, and go to state 140


State 131

   59 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 141
    seqexp   go to state 15
    voidexp  go to state 16


State 132

   53 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 142


State 133

   54 ty: ARRAY OF . ID

    ID  shift, and go to state 143


State 134

   29 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 144
    seqexp   go to state 15
    voidexp  go to state 16


State 135

   47 tyfield: ID COLON ID .

    $default  reduce using rule 47 (tyfield)


State 136

   63 fundec: FUNCTION ID LPAREN RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 145


State 137

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   62 fundec: FUNCTION ID LPAREN RPAREN EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 62 (fundec)


State 138

   49 tyfields_nonempty: tyfield COMMA tyfields_nonempty .

    $default  reduce using rule 49 (tyfields_nonempty)


State 139

   61 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 146


State 140

   60 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 147
    seqexp   go to state 15
    voidexp  go to state 16


State 141

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   59 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 59 (vardec)


State 142

   53 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 53 (ty)


State 143

   54 ty: ARRAY OF ID .

    $default  reduce using rule 54 (ty)


State 144

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   29    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 29 (exp)


State 145

   63 fundec: FUNCTION ID LPAREN RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 148
    seqexp   go to state 15
    voidexp  go to state 16


State 146

   61 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 149


State 147

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   60 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 60 (fundec)


State 148

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   63 fundec: FUNCTION ID LPAREN RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 63 (fundec)


State 149

   61 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue   go to state 13
    exp      go to state 150
    seqexp   go to state 15
    voidexp  go to state 16


State 150

    7 exp: exp . AND exp
    8    | exp . OR exp
   12    | exp . PLUS exp
   13    | exp . MINUS exp
   14    | exp . TIMES exp
   15    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . LT exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . GE exp
   61 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 61 (fundec)
